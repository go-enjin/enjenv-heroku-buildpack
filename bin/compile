#!/bin/bash

SCRIPT_NAME=$(basename $0)
SCRIPT_PATH=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

indent () {
    sed -u 's/^/       /'
}

stdout () {
    echo "-----> $@"
}

notify () {
    stdout "# $@"
}

if [ $# -ne 3 ]
then
    notify "error: invalid number of arguments given to ${SCRIPT_NAME} script"
    exit 1
fi

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

SCRIPT_OS=$(uname | perl -pe '$_=lc')
if [ "${SCRIPT_OS}" != "linux" ]
then
    notify "error: unsupported operating system - ${SCRIPT_OS}"
    exit 1
fi

SCRIPT_ARCH=$(uname -m)
case "${SCRIPT_ARCH}" in
    "aarch64"|"arm64")
        SCRIPT_ARCH="arm64"
        ;;
    "x86_64"|"amd64")
        SCRIPT_ARCH="amd64"
        ;;
    *)
        notify "error: unsupported archicture - ${SCRIPT_ARCH}"
        exit 1
        ;;
esac

export ENJENV_BIN="${SCRIPT_PATH}/enjenv.${SCRIPT_OS}.${SCRIPT_ARCH}"
if [ ! -f "${ENJENV_BIN}" ]
then
    notify "error: missing enjenv binary: ${ENJENV_BIN}"
    exit 1
fi

if [ ! -x "${ENJENV_BIN}" ]
then
    chmod +x "${ENJENV_BIN}"
    if [ $? -ne 0 ]
    then
        notify "error: unable to chmod missing +x bit on ${ENJENV_BIN}"
        exit 1
    fi
fi

notify "exporting environment"

if [ -d "${ENV_DIR}" ]
then
    cd "${ENV_DIR}" > /dev/null
    for name in $(ls -1)
    do
        export ${name}="$(cat ${name})"
        stdout "    ${name}"
    done
    cd - > /dev/null
fi

[ ! -d "${CACHE_DIR}" ] && mkdir "${CACHE_DIR}" 2>&2 > /dev/null
export ENJENV_PATH="${CACHE_DIR}/.enjenv"
stdout "    ENJENV_PATH=${ENJENV_PATH}"

cd "${BUILD_DIR}" > /dev/null

notify "starting enjenv buildpack"
export ENJENV_CUSTOM_INDENT="      "
${ENJENV_BIN} buildpack --force
if [ $? -ne 0 ]
then
    notify "enjenv buildpack ended with errors"
    exit 1
fi
notify "enjenv buildpack finished"
